<!DOCTYPE html>
<html lang="en-US">

	<head>
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>The deep convergence of networks, software and people | Normative</title>
		<link rel="profile" href="http://gmpg.org/xfn/11">
		<link rel="pingback" href="http://www.normative.com/xmlrpc.php">
		<link rel="shortcut icon" href="http://www.normative.com/wp-content/themes/normative/favicon.ico" />
		<meta name='robots' content='noindex,follow' />
<link rel="alternate" type="application/rss+xml" title="Normative &raquo; Feed" href="http://www.normative.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="Normative &raquo; Comments Feed" href="http://www.normative.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="Normative &raquo; The deep convergence of networks, software and people Comments Feed" href="http://www.normative.com/deep-convergence-networks-software-people/feed/" />
<link rel='stylesheet' id='norm-style-css'  href='http://www.normative.com/wp-content/themes/normative/styles/main.css?ver=20140810' type='text/css' media='' />
<link rel='stylesheet' id='sharedaddy-css'  href='http://www.normative.com/wp-content/plugins/jetpack/modules/sharedaddy/sharing.css?ver=3.1.1' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://www.normative.com/wp-content/plugins/jetpack/_inc/genericons/genericons/genericons.css?ver=3.1' type='text/css' media='all' />
<link rel='canonical' href='http://www.normative.com/deep-convergence-networks-software-people/' />
<link rel='shortlink' href='http://www.normative.com/?p=1360' />

<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article" />
<meta property="og:title" content="The deep convergence of networks, software and people" />
<meta property="og:url" content="http://www.normative.com/deep-convergence-networks-software-people/" />
<meta property="og:description" content="Normative&#039;s Technology Director Andrew Hull shares his thoughts on what it means to design and build software for something that can&#039;t be modeled." />
<meta property="article:published_time" content="2014-07-17T16:17:06+00:00" />
<meta property="article:modified_time" content="2014-09-22T18:36:23+00:00" />
<meta property="article:author" content="http://www.normative.com/author/andrew/" />
<meta property="og:site_name" content="Normative" />
<meta property="og:image" content="http://www.normative.com/wp-content/uploads/2014/07/mapbox.jpg" />
		<script type="text/javascript">
			(function(d) {
				var config = {
					kitId: 'spa0fsl',
					scriptTimeout: 3000
				},
				h=d.documentElement,t=setTimeout(function(){h.className=h.className.replace(/\bwf-loading\b/g,"")+" wf-inactive";},config.scriptTimeout),tk=d.createElement("script"),f=false,s=d.getElementsByTagName("script")[0],a;h.className+=" wf-loading";tk.src='//use.typekit.net/'+config.kitId+'.js';tk.async=true;tk.onload=tk.onreadystatechange=function(){a=this.readyState;if(f||a&&a!="complete"&&a!="loaded")return;f=true;clearTimeout(t);try{Typekit.load(config)}catch(e){}};s.parentNode.insertBefore(tk,s)
			})(document);
		</script>
	</head>

<body>
<div id="page" class="hfeed">

	<header class="site-menubar" id="masthead" role="banner">
		<div class="nav-bar light">
			<div class="site-container">
				<div class="site-branding">
					<a href="http://www.normative.com/" rel="home" class="logo"><img src="http://www.normative.com/wp-content/themes/normative/images/normative-logo.w.svg" alt="Normative Logo" class="normative-logo"></a>
					<button class="site-navigation-toggle">Toggle Menu</button>
				</div>

				<nav id="site-navigation" class="site-navigation" role="navigation">
					<div class="menu-primary-container"><ul id="menu-primary" class="menu"><li class="nav-work"><a href="http://www.normative.com/work/">Work</a></li>
<li class="nav-studio"><a href="http://www.normative.com/studio/">Our Studio</a></li>
<li class="nav-blog active"><a href="http://www.normative.com/blog/">Blog</a></li>
<li class="nav-contact"><a href="http://www.normative.com/contact/">Contact</a></li>
</ul></div>				</nav><!-- #site-navigation -->
			</div>
		</div>
		<div class="nav-bar dark">
			<div class="site-container">
				<div class="site-branding">
					<a href="http://www.normative.com/" rel="home" class="logo"><img src="http://www.normative.com/wp-content/themes/normative/images/normative-logo.b.svg" alt="Normative Logo" class="normative-logo"></a>
					<button class="site-navigation-toggle">Toggle Menu</button>
				</div>

				<nav id="site-navigation" class="site-navigation" role="navigation">
					<div class="menu-primary-container"><ul id="menu-primary-1" class="menu"><li class="nav-work"><a href="http://www.normative.com/work/">Work</a></li>
<li class="nav-studio"><a href="http://www.normative.com/studio/">Our Studio</a></li>
<li class="nav-blog active"><a href="http://www.normative.com/blog/">Blog</a></li>
<li class="nav-contact"><a href="http://www.normative.com/contact/">Contact</a></li>
</ul></div>				</nav><!-- #site-navigation -->
			</div>
		</div>
	</header>

	<section class="site-header  deep-convergence-networks-software-people">
		<div class="site-container">
			<a class="skip-link screen-reader-text" href="#content">Skip to content</a>
		</div>
		<span class="image-attribution" id="site-attribution"></span>
	</section>

	<section class="site-content site-container" id="content" data-pjax-container>

	
	<title>The deep convergence of networks, software and people | Normative</title>

	<div id="primary" class="content-area">
		<main id="main" class="site-article" role="main">

		
			
<article id="post-1360" class="post-1360 post type-post status-publish format-standard has-post-thumbnail hentry category-featured-blog category-homepage-featured category-top-of-blog-page tag-thinking">

	<div class="article article-single">

					<div class="article-image">
				<img width="867" height="542" src="http://www.normative.com/wp-content/uploads/2014/07/mapbox-867x542.jpg" class="attachment-blog-post-featured-image wp-post-image" alt="mapbox" />								<div class="article-caption"></div>			</div>
		
		<header class="article-header">
			<h1 class="article-title">
				<div class="article-featured-indicator">
					★				</div>
				The deep convergence of networks, software and people			</h1>
			<p class="article-byline">Posted by <span class="author vcard"><a class="url fn n" href="http://www.normative.com/author/andrew/" data-pjax>Andrew Hull</a></span> on <span class="posted-on"><time class="entry-date published" datetime="2014-07-17T12:17:06+00:00">Jul. 17, 2014</time></span><span class="byline"> </span></p>
			<p class="article-excerpt">
				Normative's Technology Director Andrew Hull shares his thoughts on what it means to design and build software for something that can't be modeled.			</p>
		</header><!-- .entry-header -->

		<div class="article-content">
			<div class="article-body">
				<p>The <a href="http://ideas.normative.com/practice/design-for-the-network-introduction">deep convergence</a> of networks, software and people makes it an exciting time to be in the technology business. There is much reason to be enthusiastic about modern trends in software and the resulting startup culture and maker culture we are all living in today. But what does it practically mean for how we design and build software? I’ve been building networked applications for over 15 years and have been thinking a lot about how we actually approach our craft differently as a result of these shifts.</p>
<p><b>As one simple example of deep convergence, consider Twitch Plays Pokemon.</b> If you have not heard of <a title="Twitch Plays Pokemon" href="http://www.twitch.tv/twitchplayspokemon" target="_blank">Twitch Plays Pokemon</a>, it&#8217;s a simple idea that exploded in popularity this year. In a nutshell, a video gamer used an old Nintendo Gameboy Pokemon game streamed over the Twitch TV video streaming service, but with an important but simple catch: he hooked up the built-in chat system for Twitch to send commands to the game. The chat is available to all viewers. So basically anyone that was watching could try to control the game by typing individual commands in chat like A, B, up, down, etc. Except that everyone else was doing the same thing, so everyone’s commands all happened simultaneously. Everyone had some control in playing the game but no one individual could complete any one task. It was an incredibly simple idea, but it exploded in popularity. Over one million people participated in the first Twitch Plays Pokemon and the idea was later refined and months later has spread to dozens of other games.</p>
<p>What made Twitch Plays so compelling for so many people? It&#8217;s certainly not an effective way to beat a video game. It&#8217;s painstakingly slow compared to just playing single player. Navigating a simple ledge in Pokemon could take hours in the Twitch Plays version because anyone could disrupt the game by working against the common goal, i.e. typing ‘Down’ and walking off the ledge! Neither was its popularity a product of either the interface or the software. It is literally 18-year old graphics over top of a 25-year old communication protocol. Nothing ground-breaking here.</p>
<p><b>No, the appeal is the </b><b><i>emergent behaviour</i></b><b> from all the people participating in the system.</b> People could either choose to work towards the common goal of beating the game or they could work against it, just for the lulz. The notion of negatively disrupting a community just to see what happens has a long, rich, unfortunate tradition on the internet. To combat this behaviour in Twitch Plays, the player base gradually developed systems of maintaining order to allow the game to be beaten and the game became a battleground for order versus chaos. So, all of the really interesting stuff in Twitch Plays games arises out of the combination of the technologies and the simultaneous participation of thousands of players. This is emergent behaviour–essentially it is something greater than the sum of its parts. And emergent behaviour is nearly impossible to model.</p>
<figure id="attachment_1361" style="width: 596px;" class="wp-caption aligncenter"><a href="http://ideas.normative.com/wp-content/uploads/Twitch-Plays-Pokemon.jpg"><img class="size-full wp-image-1361" src="http://ideas.normative.com/wp-content/uploads/Twitch-Plays-Pokemon.jpg" alt="Image source: Twitch.tv" width="596" height="340" /></a><figcaption class="wp-caption-text">Image source: Twitch.tv</figcaption></figure>
<p><b>So how do we design something that can&#8217;t be modeled? </b>How do we approach design in an industry where the very nature of what we&#8217;re building is constantly changing? Let’s back up for a moment and reflect on how our craft has evolved during the Agile movement. Agile arose out of a recognition that the software development landscape had shifted the areas of risk and difficulty. What used to be difficult to change without incurring risk had become increasingly easy. So it became more valuable to build working code earlier to test and refine our design decisions and change it later than it had been to make those decisions up front. The way we build software has changed so rapidly; trying to formally adhere to a particular methodology and its rituals misses the point of the Agile movement. Instead of adopting a particular flavour of Scrum or XP and its associated rituals, it’s necessary to be constantly re-evaluating things like where you spend time thinking in the abstract, when you start building something concrete and <i>what</i> you start building. It all depends on exactly what problem you’re trying to solve and what the relative value is in working in code versus working in the abstract.</p>
<p>The abstract design tools for building web applications have changed as the applications themselves have. When we are concerned with the visual presentation of content, we whip out pencil and paper, Illustrator or Photoshop to mock up some ideas. When we are concerned with the organization of that content, we might sketch up some wireframes using whatever method we prefer. For static content websites (think 1999) that might be all we need. These design tools capture enough of the essence of the final product to let us make decisions and steer the design. But as web applications became more interactive, these tools became less capable of fully representing the end product. Flat design sketches couldn’t capture how these products <i>felt</i> as you clicked or hovered over areas. So other tools like &#8220;click-through wireframes&#8221; or high-fidelity prototypes came into use to better represent the nature of the product, to varying degrees of success. We crafted these ways to try and quickly mock up the flow of more interactive web/mobile applications and help us make good early design decisions.</p>
<p>But what about our Twitch Plays example? What tools could help us model that experience and shape its design? The answer is that no mockup or prototype is going to capture the core of the experience in any meaningful way because the experience <i>only</i> exists as a result of the people in the system.</p>
<p><b>Increasingly, what we call the “content” is actually other people and other networks. </b>Today&#8217;s applications are much more than the visual organization of content. And more than the way you as a user interact with and modify that content. When you interact with the application, you are seeing in real-time the reactions of other people and APIs you&#8217;re connected to. When you push and poke at the application, it pokes back! In unpredictable ways your actions affect the wider network and ripple out and back into your experience. Twitch Plays might be an extreme example, but as we wire up our digital products increasingly with interconnected networks, their nature is increasingly a product of the responses that come back from those networks. The experience cannot be wholly represented in mock prototypes that are coded to respond in predictable ways, or even using a set of preset random responses. The power of the application is seeing the emergent behaviour of the system, and recognizing that you are a participant in that emergent behaviour. As with the twitch-plays example, the pieces like the chat software and the emulation software are just catalysts to open up emergent behaviour of thousands of people.</p>
<p>While all the aforementioned design tools, like interactive wireframes and comps, are still in our toolbox, they are less important than previously. Every design problem has to be approached freshly and different tools in our toolbox will be appropriate to each problem. Sometimes that&#8217;s sketches. Sometimes that&#8217;s a prototype. In some cases, there&#8217;s no substitute for direct code experimentation with live data and real networks. What happens when we hook up various APIs and libraries and user bases? In a recent example, we wanted to experiment with Twitter data to see if we could capture trends of emotional sentiment.</p>
<p>These images are snapshots from live coding experiments using Meteor, d3, SentiMental as an analysis tool and socket.io to create a real-time color map of emotion in the US based on incoming tweets. Warm colors represent generally positive tweets and cool colors generally negative. The code to produce these was written from scratch in just a few hours. Experiments like this are a core part of how we design during the early, generative phase of a project.</p>
<a href="http://ideas.normative.com/wp-content/uploads/colormap.jpg"><img class="aligncenter size-full wp-image-1362" src="http://ideas.normative.com/wp-content/uploads/colormap.jpg" alt="colormap" width="800" height="367" /></a>
<a href="http://ideas.normative.com/wp-content/uploads/heat-mapbox.jpg"><img class="aligncenter size-full wp-image-1363" src="http://ideas.normative.com/wp-content/uploads/heat-mapbox.jpg" alt="heat-mapbox" width="800" height="549" /></a>
<p><b>We treat working code as a design tool, not just an end-product.</b> This idea drives everything about the way we work at Normative. From the way we split our teams, to the way we disseminate ideas internally, to where we sit, everything is touched by this concept. Tools that let us experiment in code in ways that can then be made production-ready are gravy for us. Things like scaffolding in Rails and AngularJS are great examples of the types of tools that let us experiment with design ideas quickly, where in the space of a few minutes a solid API with rich functionality can be thrown together for testing ideas. Recently we have added tools like ReactJS and Meteor to our arsenal of tools to quickly experiment in code. And we are always on the lookout for new tools. Using the right tool at the right time can reduce your effort by an order of magnitude.</p>
<p>The point I’m making is not how difficult these things are to build or to tout our team’s ability to use these tools. Rather, the point is <i>how easy</i> they are to build. Understanding that affects the entire software design process. Our practice is built around recognizing that new ways to quickly experiment are emerging constantly and our work environment is focused around the idea of constantly learning new things.</p>
<p>There is no one tool or set of tools that solve software design problems. Sometimes code is the wrong tool, sometimes it’s essential. We are constantly asking ourselves what the real problem is we’re trying to solve and then collectively, designer and developer alike, we rummage through our growing, changing toolbox for the means to best test our ideas.</p>
							</div>
		</div>

		<!-- narrow, add border on top and bottom -->
		<footer class="article-footer">
			<div class="author">
		    <!--<div class="entry-footer-avatar"><img alt='' src='http://0.gravatar.com/avatar/a553169a4631579f296a3fedff2b4c8b?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' /></div>-->
		    <div class="author-description">
		      <p>Andrew Hull is a Technology Director at Normative. He is always tinkering with technology and learning new things. Andrew is an international gaming champion and has competed in several national karaoke competitions.</p>		    </div>
			</div>
		</footer>

	  			<div class="article-share">
							</div>
				<a id="entry-comments-link" href="#">Comments</a>
	  <div id="disqus_thread" class="disqus-hidden"></div>
	</div>


		</article><!-- #post-## -->

		
		</main><!-- #main -->
	</div><!-- #primary -->



  </section><!-- #content -->

	<footer id="colophon" class="site-footer" role="contentinfo">
    <div class="site-container">
      <div class="footer-menu">
        <h5 class="footer-title">Address</h5>
        <div class="footer-content">
          <p class="adr">
            <span class="street-address">376 Bathurst Street</span><br>
            <span class="region">Toronto, Ontario</span><br>
            <span class="postal-code">M5T 2S6</span><br>
          </p>
        </div>
        <h5 class="footer-title">Phone</h5>
        <div class="footer-content">
          <p>416-619-7927</p>
        </div>
      </div>
      <div class="footer-menu">
        <h5 class="footer-title">Contact</h5>
        <div class="footer-content">
          <ul>
            <li><span class="footer-label">New business inquiries</span><a href="mailto:newbusiness@normative.com">newbusiness@normative.com</a></li>
            <li><span class="footer-label">Career inquiries</span><a href="mailto:careers@normative.com">careers@normative.com</a></li>
            <li><span class="footer-label">Press &amp; speaking inquiries</span><a href="mailto:thinking@normative.com">thinking@normative.com</a></li>
          </ul>
        </div>
      </div>
      <div class="footer-menu">
        <h5 class="footer-title">Media</h5>
        <div class="footer-content">
          <p><a href="/press">Normative press kit</a></p>
        </div>
      </div>
      <div class="footer-menu">
        <h5 class="footer-title">Elsewhere</h5>
        <div class="footer-content">
          <ul class="footer-social">
            <li><a href="https://twitter.com/normativedesign">Twitter</a></li>
            <li><a href="https://www.linkedin.com/company/normative">LinkedIn</a></li>
            <li><a href="http://normativedesign.tumblr.com/">Tumblr</a></li>
          </ul>
        </div>
      </div>
      <div class="footer-copyright">
        &copy; Normative 2014
      </div>
    </div>
	</footer><!-- #colophon -->
</div><!-- #page -->

    <script type="text/javascript">
    // <![CDATA[
        var disqus_shortname = 'normativeideas';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i < nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) url = url[0];
                    else url = url[1]
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
    //]]>
    </script>
<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js?ver=3.9.2'></script>
<script type='text/javascript' src='http://www.normative.com/wp-content/themes/normative/scripts/libs.js?ver=20140828'></script>
<script type='text/javascript' src='http://www.normative.com/wp-content/themes/normative/scripts/main.js?ver=20140810'></script>
<script type='text/javascript' src='http://www.normative.com/wp-includes/js/comment-reply.min.js?ver=3.9.2'></script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-17713937-3', 'auto');
  ga('send', 'pageview');
</script>


</body>
</html>

